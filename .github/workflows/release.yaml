name: create_github_release

on:
  create:
    tags: "v*"

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.7'

      - name: Build
        run: make -j build/linux build/windows

      - name: Upload linux
        uses: actions/upload-artifact@v2
        with:
          name: coder-cli-linux-amd64
          path: ./ci/bin/coder-cli-linux-amd64.tar.gz

      - name: Upload windows
        uses: actions/upload-artifact@v2
        with:
          name: coder-cli-windows
          path: ./ci/bin/coder-cli-windows.zip

  build_darwin:
    name: Build darwin binary
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Install Gon
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon

      - name: Import Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.7'

      - name: Build Release Assets
        run: make build/macos
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}

      - name: Upload darwin
        uses: actions/upload-artifact@v2
        with:
          name: coder-cli-darwin-amd64
          path: ./ci/bin/coder-cli-darwin-amd64.zip

  draft_release:
    name: Create Release
    runs-on: ubuntu-20.04
    needs:
      - build_darwin
      - build
    steps:
      - uses: actions/download-artifact@v2

      - name: content
        run: sh -c "ls -al"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ""
          draft: true
          prerelease: false

      - name: Upload Linux Release
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: coder-cli-linux-amd64/coder-cli-linux-amd64.tar.gz
          asset_name: coder-cli-linux-amd64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload MacOS Release
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: coder-cli-darwin-amd64/coder-cli-darwin-amd64.zip
          asset_name: coder-cli-darwin-amd64.zip
          asset_content_type: application/zip

      - name: Upload Windows Release
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: coder-cli-windows/coder-cli-windows.zip
          asset_name: coder-cli-windows.zip
          asset_content_type: application/zip
